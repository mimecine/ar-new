/*
  The CSS in this style tag is based off of Bear Blog's default CSS.
  https://github.com/HermanMartinus/bearblog/blob/297026a877bc2ab2b3bdfbd6b9f7961c350917dd/templates/styles/blog/default.css
  License MIT: https://github.com/HermanMartinus/bearblog/blob/master/LICENSE.md
 */

/* fredoka-latin-wght-normal */
@font-face {
	font-family: 'Fredoka Variable';
	font-style: normal;
	font-display: block;
	font-weight: 300 700;
	src: url(@fontsource-variable/fredoka/files/fredoka-latin-wght-normal.woff2) format('woff2-variations');
	unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;
  }
  
  /* fredoka-latin-ext-wght-normal */
  @font-face {
	font-family: 'Fredoka Variable';
	font-style: normal;
	font-display: block;
	font-weight: 300 700;
	src: url(@fontsource-variable/fredoka/files/fredoka-latin-ext-wght-normal.woff2) format('woff2-variations');
	unicode-range: U+0100-02AF,U+0304,U+0308,U+0329,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF;
  }

:root {
	--accent: #141414;
	--accent-dark: #000d8a;
	--black: 15, 18, 25;
	--gray: 96, 115, 159;
	--gray-light: 229, 233, 240;
	--gray-dark: 34, 41, 57;
	--gray-gradient: rgba(var(--gray-light), 50%), #fff;
	--box-shadow: 0 2px 6px rgba(var(--gray), 25%), 0 8px 24px rgba(var(--gray), 33%),
		0 16px 32px rgba(var(--gray), 33%);
	--main-background: rgb(210,210,210); /*rgb(141, 138, 138);*/
	--font-family: 'Fredoka Variable', sans-serif;
	
}



[x-cloak] {
	display: none !important;
  }

  
  body:has(dialog[open]) {overflow: hidden}

  dialog:modal {
	max-width: 100vw;
	max-height:100vh;
	width: calc(100vw - 1em);
	height: calc(100vh - 1em);
  }

  


li:empty {
	display: none;
}

p:first-of-type {
	margin-top: -0.5rem;
}
body {
	font-family: var(--font-family);
	margin: 0;
	padding: 0;
	text-align: left;
	background-color: var(--main-background);
	background-size: 100% 600px;
	word-wrap: break-word;
	overflow-wrap: break-word;
	color: rgb(var(--gray-dark));
	@apply text-sm lg:text-xl
}
main {
	margin: auto;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0 0 0.5rem 0;
	color: rgb(var(--black));
	line-height: 1.2;
}
h1 {
	@apply text-2xl lg:text-5xl

}
h2 {
	font-size: 2.441em;
}
h3 {
	font-size: 1.953em;
}
h4 {
	font-size: 1.563em;
}
h5 {
	font-size: 1.25em;
}
strong,
b {
	font-weight: 700;
}
a {
	color: var(--accent);
}
a:hover {
	color: var(--accent);
	opacity: 30;
	transition: all;
	transition-duration: 100ms;
}
p {
	margin-bottom: 1em;
}
.prose p {
	margin-bottom: 2em;
}
textarea {
	width: 100%;
	font-size: 16px;
}
input {
	font-size: 16px;
}
table {
	width: 100%;
}
img {
	max-width: 100%;
	height: auto;

}
code {
	padding: 2px 5px;
	background-color: rgb(var(--gray-light));
	border-radius: 2px;
}
pre {
	padding: 1.5em;
	border-radius: 8px;
}
pre > code {
	all: unset;
}
blockquote {
	border-left: 4px solid var(--accent);
	padding: 0 0 0 20px;
	margin: 0px;
	font-size: 1.333em;
}
hr {
	border: none;
	border-top: 1px solid rgb(var(--gray-dark));
}
@media (max-width: 720px) {
	body {
		font-size: 18px;
	}
	main {
		x-padding: 1em;
	}
}

.sr-only {
	border: 0;
	padding: 0;
	margin: 0;
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	/* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
	clip: rect(1px 1px 1px 1px);
	/* maybe deprecated but we need to support legacy browsers */
	clip: rect(1px, 1px, 1px, 1px);
	/* modern browsers, clip-path works inwards from each corner */
	clip-path: inset(50%);
	/* added line to stop words getting smushed together (as they go onto seperate lines and some screen readers do not understand line feeds as a space */
	white-space: nowrap;
}

:is(input,select):focus, :is(input,select):active {
	@apply outline-gray-400;
}

::selection {
	@apply text-white;
}

html {
    @apply scroll-smooth focus:outline-none active:outline-none;
  }
  h2[id] {
    @apply scroll-m-12 lg:scroll-m-20;
  }
  li[id], a[id] {
    @apply scroll-m-32 lg:scroll-m-52
  }
  a:target {
    @apply block animate-pulse ;
    animation-iteration-count: 3;
  }