---
import { Image } from "astro:assets";
import type { HTMLAttributes } from "astro/types";
import { extract } from "@extractus/oembed-extractor";
import { Icon } from "astro-icon/components";

type Props = HTMLAttributes<"img">;

const { src, alt, title, class: className, ...props } = Astro.props;

let film, id, url, embed, thumb, width, height, vtitle, fault, err;

if (src?.includes("vimeo")) {
  let id = src.replace(
    /(?:http:|https:|)\/\/(?:player.|www.)?vimeo\.com\/(?:video\/|embed\/|watch\?\S*v=|v\/)?(\d*)(?:.*)/gim,
    "$1"
  );
  url = `https://vimeo.com/${id}`;
  embed = `https://player.vimeo.com/video/${id}?app_id=122963`;
} else if (src?.includes("youtube")) {
  let id = src.replace(
    /(?:http:|https:|)\/\/(?:www\.|)youtube\.com\/(?:watch\?.*(?:|\&)v=|embed\/|v\/|watch\?.*?\bv=)([^#\&\?]*).*/gim,
    "$1"
  );
  url = `https://youtube.com/watch?v=${id}`;
  embed = `https://www.youtube.com/embed/${id}`;
}


try {
  console.log("extracting", url);
  let res = await extract(url);
  console.log("extracted", JSON.stringify(res));
  thumb = res.thumbnail_url;
  width = res.thumbnail_width;
  height = res.thumbnail_height;
} catch (e) {
  console.log(e, id, url);
  fault = true
  err = e;
}
---
<div
  class="h-full cursor-pointer"
  onclick="this.querySelector('dialog').showModal()"
>
  <div class="w-full bg-gray-200 h-64 flex justify-center items-center bg-no-repeat bg-center bg-[url('/SvgSpinners180RingWithBg.svg')]">

    { fault && (<div class="hidden"> 
      FAULT getting thumb {JSON.stringify({err, id, url, embed})}
      </div>
      )}
          {
      thumb && (
        <Image
          width={width}
          height={height}
          src={thumb}
          alt={title}
          class="max-w-full h-full w-auto object-contain p-2 opacity-0 transition-opacity duration-500 "
          onload="this.classList.remove('opacity-0')"
          {...props}
        />
      ) || (
        <Icon
          name="material-symbols-light:video-library-rounded"
          class={`size-12 lg:size-12 ${className || ""}`}
          title={title || "Video"}
          />
      )
    }
  </div>
  <slot />
  <dialog
    x-data="{open:false}"
    @keyup.escape.window="$el.close()"
    class="w-lvw h-lvh bg-black bg-opacity-90 backdrop:bg-black backdrop:opacity-10"
    xclass="w-screen h-screen inset-0 z-[600] opacity-0 pointer-events-none transition-opacity duration-500 open:opacity-100 open:pointer-events-auto bg-[var(--gray)] backdrop:bg-gray-100 backdrop:opacity-80"

    onclose="this.querySelector('iframe').src = null; this.querySelector('iframe').src = this.querySelector('iframe').dataset.src;"
  >
    <form method="dialog">
      <button
        class="absolute top-0 right-0 focus-visible:outline-none text-white p-0 pb-28 pl-28"
        type="submit"
      >
        <Icon name="material-symbols-light:close-rounded" class="size-12 lg:size-12" />
      </button>
    </form>
    <div class="h-full w-full inset-0 grid place-items-center p-4 lg:p-4">
      <iframe
        width="100%" height="100%"
        id="film-iframe"
        class="w-full h-auto aspect-video object-contain bg-gray bg-no-repeat bg-center bg-[url('/SvgSpinners180RingWithBg.svg')]"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen
        src={embed}
        data-src={embed}></iframe>
    </div>
  </dialog>
</div>
